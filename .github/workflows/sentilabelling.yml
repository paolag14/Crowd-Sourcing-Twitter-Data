name: Sentilabelling workflow
env:
  RESPOSITORY: repo/sentilabelling
on:
  pull_request:
    branches: [main]
jobs:
  lint:
    name: Lint Code Base
    if: ${{ github.event_name == 'push'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Lint Code Base
        uses: github/super-linter/slim@v4

        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    name: Build the image
    if: ${{ github.event_name == 'push'}}
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: $RESPOSITORY
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
  terraform_staging:
    name: Terraform stagging
    if: ${{ github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    needs:
      - lint
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.3
          terraform_wrapper: false
      - name: Terraform fmt
        run: terraform fmt -check -recursive
